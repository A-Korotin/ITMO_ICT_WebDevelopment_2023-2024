{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u041e\u0431\u0449\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u0410\u0432\u0442\u043e\u0440 \u041a\u043e\u0440\u043e\u0442\u0438\u043d \u0410\u043b\u0435\u043a\u0441\u0435\u0439, \u0433\u0440\u0443\u043f\u043f\u0430 K33392 \u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435 \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b 3.1-3.3 \u0438 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21163","title":"\u041e\u0431\u0449\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f"},{"location":"#_1","text":"","title":"\u041e\u0431\u0449\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f"},{"location":"#_2","text":"\u041a\u043e\u0440\u043e\u0442\u0438\u043d \u0410\u043b\u0435\u043a\u0441\u0435\u0439, \u0433\u0440\u0443\u043f\u043f\u0430 K33392","title":"\u0410\u0432\u0442\u043e\u0440"},{"location":"#_3","text":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b 3.1-3.3 \u0438 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21163","title":"\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435"},{"location":"CRUD_endpoints/","text":"CRUD Endpoints \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b \u0432\u0441\u0435\u043c \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 Auth token (\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a Authorization: Token {your token} ) Diet POST /diets - \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 GET /diets - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 GET /diets/{id} - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 PUT /diets/{id} - \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 DELETE /diets/{id} - \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u041c\u043e\u0434\u0435\u043b\u044c \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u0430: { \"id\": 1, \"name\": \"Default diet\", \"content\": \"Zerno\" } Breed POST /breeds - \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 GET /breeds - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 GET /breeds/{id} - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 PUT /breeds/{id} - \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 DELETE /breeds/{id} - \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u041c\u043e\u0434\u0435\u043b\u044c \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u0430: { \"id\": 1, \"name\": \"Default\", \"average_monthly_egg_rate\": 5, \"average_weight\": 5, \"recommended_diet\": 2 } Chicken POST /chickens - \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 GET /chickens - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 GET /chickens/{id} - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 PUT /chickens/{id} - \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 DELETE /chickens/{id} - \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u041c\u043e\u0434\u0435\u043b\u044c \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u0430: { \"id\": 1, \"weight\": 1, \"birth_date\": \"2023-11-28\", \"monthly_egg_rate\": 5, \"breed\": 1, \"cage\": 1 } Staff POST /staff - \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 GET /staff - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 GET /staff/{id} - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 PUT /staff/{id} - \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 DELETE /staff/{id} - \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u041c\u043e\u0434\u0435\u043b\u044c \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u0430: { \"username\": \"janill\", \"role\": \"Worker\", \"passport\": \"1234\", \"salary\": 1, \"employment_contract_id\": 1, \"dismissal_agreement_id\": 1 } Cage POST /cages - \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 GET /cages - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 GET /cages/{id} - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 PUT /cages/{id} - \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 DELETE /cages/{id} - \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u041c\u043e\u0434\u0435\u043b\u044c \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u0430: { \"id\": 1, \"facility\": { \"id\": 1, \"name\": \"Main\", \"_longitude\": 89.0, \"_latitude\": 89.0 }, \"responsible\": { \"username\": \"janill\", \"role\": \"Worker\", \"passport\": \"1234\", \"salary\": 1, \"employment_contract_id\": 1, \"dismissal_agreement_id\": 1 }, \"row\": 1, \"column\": 1 } Facility POST /facilities - \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 GET /facilities - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 GET /facilities/{id} - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 PUT /facilities/{id} - \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 DELETE /facilities/{id} - \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u041c\u043e\u0434\u0435\u043b\u044c \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u0430: { \"id\": 1, \"name\": \"Main\", \"_longitude\": 89.0, \"_latitude\": 89.0 }","title":"CRUD"},{"location":"CRUD_endpoints/#crud","text":"Endpoints \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b \u0432\u0441\u0435\u043c \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 Auth token (\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a Authorization: Token {your token} )","title":"CRUD"},{"location":"CRUD_endpoints/#diet","text":"POST /diets - \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 GET /diets - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 GET /diets/{id} - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 PUT /diets/{id} - \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 DELETE /diets/{id} - \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u041c\u043e\u0434\u0435\u043b\u044c \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u0430: { \"id\": 1, \"name\": \"Default diet\", \"content\": \"Zerno\" }","title":"Diet"},{"location":"CRUD_endpoints/#breed","text":"POST /breeds - \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 GET /breeds - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 GET /breeds/{id} - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 PUT /breeds/{id} - \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 DELETE /breeds/{id} - \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u041c\u043e\u0434\u0435\u043b\u044c \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u0430: { \"id\": 1, \"name\": \"Default\", \"average_monthly_egg_rate\": 5, \"average_weight\": 5, \"recommended_diet\": 2 }","title":"Breed"},{"location":"CRUD_endpoints/#chicken","text":"POST /chickens - \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 GET /chickens - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 GET /chickens/{id} - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 PUT /chickens/{id} - \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 DELETE /chickens/{id} - \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u041c\u043e\u0434\u0435\u043b\u044c \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u0430: { \"id\": 1, \"weight\": 1, \"birth_date\": \"2023-11-28\", \"monthly_egg_rate\": 5, \"breed\": 1, \"cage\": 1 }","title":"Chicken"},{"location":"CRUD_endpoints/#staff","text":"POST /staff - \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 GET /staff - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 GET /staff/{id} - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 PUT /staff/{id} - \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 DELETE /staff/{id} - \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u041c\u043e\u0434\u0435\u043b\u044c \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u0430: { \"username\": \"janill\", \"role\": \"Worker\", \"passport\": \"1234\", \"salary\": 1, \"employment_contract_id\": 1, \"dismissal_agreement_id\": 1 }","title":"Staff"},{"location":"CRUD_endpoints/#cage","text":"POST /cages - \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 GET /cages - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 GET /cages/{id} - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 PUT /cages/{id} - \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 DELETE /cages/{id} - \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u041c\u043e\u0434\u0435\u043b\u044c \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u0430: { \"id\": 1, \"facility\": { \"id\": 1, \"name\": \"Main\", \"_longitude\": 89.0, \"_latitude\": 89.0 }, \"responsible\": { \"username\": \"janill\", \"role\": \"Worker\", \"passport\": \"1234\", \"salary\": 1, \"employment_contract_id\": 1, \"dismissal_agreement_id\": 1 }, \"row\": 1, \"column\": 1 }","title":"Cage"},{"location":"CRUD_endpoints/#facility","text":"POST /facilities - \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 GET /facilities - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 GET /facilities/{id} - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 PUT /facilities/{id} - \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 DELETE /facilities/{id} - \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u041c\u043e\u0434\u0435\u043b\u044c \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u0430: { \"id\": 1, \"name\": \"Main\", \"_longitude\": 89.0, \"_latitude\": 89.0 }","title":"Facility"},{"location":"Domain/","text":"\u0414\u043e\u043c\u0435\u043d \u0412\u0430\u0440\u0438\u0430\u043d\u0442 7 \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u0443\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u0443, \u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u043d\u0430 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044e \u043f\u0442\u0438\u0446\u0435\u0444\u0430\u0431\u0440\u0438\u043a\u0438 \u0438 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0449\u0443\u044e \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u0430\u0445 \u0444\u0430\u0431\u0440\u0438\u043a\u0438 \u0438 \u043e\u0431 \u0438\u043c\u0435\u044e\u0449\u0438\u0445\u0441\u044f \u043d\u0430 \u043d\u0435\u0439 \u043a\u0443\u0440\u0430\u0445. \u041e \u043a\u0430\u0436\u0434\u043e\u0439 \u043a\u0443\u0440\u0438\u0446\u0435 \u0434\u043e\u043b\u0436\u043d\u0430 \u0445\u0440\u0430\u043d\u0438\u0442\u044c\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f: \u0432\u0435\u0441 , \u0432\u043e\u0437\u0440\u0430\u0441\u0442 , \u043f\u043e\u0440\u043e\u0434\u0430 , \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0435\u0436\u0435\u043c\u0435\u0441\u044f\u0447\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c\u044b\u0445 \u043e\u0442 \u043a\u0443\u0440\u0438\u0446\u044b \u044f\u0438\u0446 , \u0430 \u0442\u0430\u043a\u0436\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043c\u0435\u0441\u0442\u043e\u043d\u0430\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0438 \u043a\u0443\u0440\u0438\u0446\u044b. \u0421\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u043e \u043f\u043e\u0440\u043e\u0434\u0435 \u0432\u043a\u043b\u044e\u0447\u0430\u044e\u0442 \u0432 \u0441\u0435\u0431\u044f: \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u0440\u043e\u0434\u044b , \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044f\u0438\u0446 \u0432 \u043c\u0435\u0441\u044f\u0446 (\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c) \u0438 \u0441\u0440\u0435\u0434\u043d\u0438\u0439 \u0432\u0435\u0441 , \u043d\u043e\u043c\u0435\u0440 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435 \u0434\u0438\u0435\u0442\u044b . \u0414\u0438\u0435\u0442\u044b \u043c\u043e\u0433\u0443\u0442 \u043c\u0435\u043d\u044f\u0442\u044c\u0441\u044f \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0441\u0435\u0437\u043e\u043d\u0430. \u041f\u0442\u0438\u0446\u0435\u0444\u0430\u0431\u0440\u0438\u043a\u0430 \u0438\u043c\u0435\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0446\u0435\u0445\u043e\u0432. \u0412 \u043a\u0430\u0436\u0434\u043e\u0439 \u043a\u043b\u0435\u0442\u043a\u0435 \u043c\u043e\u0436\u0435\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043a\u0443\u0440\u0438\u0446. \u041a\u043e\u0434 \u043a\u043b\u0435\u0442\u043a\u0438, \u0433\u0434\u0435 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u043a\u0443\u0440\u0438\u0446\u0430, \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0437\u0443\u0435\u0442\u0441\u044f \u043d\u043e\u043c\u0435\u0440\u043e\u043c \u0446\u0435\u0445\u0430, \u043d\u043e\u043c\u0435\u0440\u043e\u043c \u0440\u044f\u0434\u0430 \u0432 \u0446\u0435\u0445\u0435 \u0438 \u043d\u043e\u043c\u0435\u0440\u043e\u043c \u043a\u043b\u0435\u0442\u043a\u0438 \u0432 \u0440\u044f\u0434\u0443. \u041a\u0443\u0440\u0438\u0446\u044b \u043c\u043e\u0433\u0443\u0442 \u043f\u0435\u0440\u0435\u0441\u0430\u0436\u0438\u0432\u0430\u0442\u044c\u0441\u044f \u0438\u0437 \u043a\u043b\u0435\u0442\u043a\u0438 \u0432 \u043a\u043b\u0435\u0442\u043a\u0443. \u0414\u0438\u0440\u0435\u043a\u0442\u043e\u0440 \u043f\u0442\u0438\u0446\u0435\u0444\u0430\u0431\u0440\u0438\u043a\u0438 \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u043d\u044f\u0442\u044c \u0438\u043b\u0438 \u0443\u0432\u043e\u043b\u0438\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u0430. \u041e \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u0430\u0445 \u043f\u0442\u0438\u0446\u0435\u0444\u0430\u0431\u0440\u0438\u043a\u0438 \u0432 \u0411\u0414 \u0434\u043e\u043b\u0436\u043d\u0430 \u0445\u0440\u0430\u043d\u0438\u0442\u044c\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f: \u043f\u0430\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 , \u0437\u0430\u0440\u043f\u043b\u0430\u0442\u0430 , \u0434\u043e\u0433\u043e\u0432\u043e\u0440 \u043e \u0442\u0440\u0443\u0434\u043e\u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 , \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0431 \u0443\u0432\u043e\u043b\u044c\u043d\u0435\u043d\u0438\u0438 , \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u043d\u044b\u0435 \u0437\u0430 \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u043e\u043c \u043a\u043b\u0435\u0442\u043a\u0438 . \u041d\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u043a\u0443\u0440\u0438\u0446, \u043d\u0435 \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0445 \u043d\u0438 \u043e\u0434\u043d\u0438\u043c \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u043e\u043c. \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0443\u0440\u0438\u0446 \u043c\u043e\u0436\u0435\u0442 \u0438\u0437\u043c\u0435\u043d\u044f\u0442\u044c\u0441\u044f \u043a\u0430\u043a \u0432 \u0431\u043e\u043b\u044c\u0448\u0443\u044e, \u0442\u0430\u043a \u0438 \u0432 \u043c\u0435\u043d\u044c\u0448\u0443\u044e \u0441\u0442\u043e\u0440\u043e\u043d\u0443, \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0435 \u043c\u043e\u043c\u0435\u043d\u0442\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0447\u0430\u0441\u0442\u044c \u043a\u043b\u0435\u0442\u043e\u043a \u043c\u043e\u0436\u0435\u0442 \u043f\u0443\u0441\u0442\u043e\u0432\u0430\u0442\u044c. \u0414\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0443 \u043c\u043e\u0433\u0443\u0442 \u043f\u043e\u0442\u0440\u0435\u0431\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u044f: \u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044f\u0438\u0446, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043a\u0430\u0436\u0434\u044b\u0439 \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a \u043e\u0442 \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0445 \u0438\u043c \u043a\u0443\u0440? \u0421\u043a\u043e\u043b\u044c\u043a\u043e \u043a\u0443\u0440 \u043a\u0430\u0436\u0434\u043e\u0439 \u043f\u043e\u0440\u043e\u0434\u044b \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u0446\u0435\u0445\u0435? \u041a\u0430\u043a\u043e\u0432\u0430 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u043f\u043e\u0440\u043e\u0434\u044b \u0440\u0430\u0437\u043d\u0438\u0446\u0430 \u043c\u0435\u0436\u0434\u0443 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f\u043c\u0438 \u043f\u043e\u0440\u043e\u0434\u044b \u0438 \u0441\u0440\u0435\u0434\u043d\u0438\u043c\u0438 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f\u043c\u0438 \u043f\u043e \u043f\u0442\u0438\u0446\u0435\u0444\u0430\u0431\u0440\u0438\u043a\u0435? \u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0441\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043e\u0442\u0447\u0435\u0442 \u043e \u0440\u0430\u0431\u043e\u0442\u0435 \u043f\u0442\u0438\u0446\u0435\u0444\u0430\u0431\u0440\u0438\u043a\u0438 \u0437\u0430 \u043f\u0440\u043e\u0448\u0435\u0434\u0448\u0438\u0439 \u043c\u0435\u0441\u044f\u0446. \u041e\u0442\u0447\u0435\u0442 \u0434\u043e\u043b\u0436\u0435\u043d \u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e: \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044f\u0438\u0446 , \u043a\u0443\u0440\u0438\u0446 \u0438 \u0441\u0440\u0435\u0434\u043d\u044f\u044f \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043f\u043e \u043a\u0430\u0436\u0434\u043e\u0439 \u043f\u043e\u0440\u043e\u0434\u0435 \u043f\u043e \u0446\u0435\u0445\u0430\u043c , \u043e\u0431\u0449\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0443\u0440 \u043d\u0430 \u0444\u0430\u0431\u0440\u0438\u043a\u0435 , \u043e\u0431\u0449\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044f\u0438\u0446 , \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0435 \u043f\u0442\u0438\u0446\u0435\u0444\u0430\u0431\u0440\u0438\u043a\u043e\u0439. ER-\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u0430 \u0411\u0414","title":"\u0414\u043e\u043c\u0435\u043d"},{"location":"Domain/#_1","text":"\u0412\u0430\u0440\u0438\u0430\u043d\u0442 7 \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u0443\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u0443, \u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u043d\u0430 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044e \u043f\u0442\u0438\u0446\u0435\u0444\u0430\u0431\u0440\u0438\u043a\u0438 \u0438 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0449\u0443\u044e \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u0430\u0445 \u0444\u0430\u0431\u0440\u0438\u043a\u0438 \u0438 \u043e\u0431 \u0438\u043c\u0435\u044e\u0449\u0438\u0445\u0441\u044f \u043d\u0430 \u043d\u0435\u0439 \u043a\u0443\u0440\u0430\u0445. \u041e \u043a\u0430\u0436\u0434\u043e\u0439 \u043a\u0443\u0440\u0438\u0446\u0435 \u0434\u043e\u043b\u0436\u043d\u0430 \u0445\u0440\u0430\u043d\u0438\u0442\u044c\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f: \u0432\u0435\u0441 , \u0432\u043e\u0437\u0440\u0430\u0441\u0442 , \u043f\u043e\u0440\u043e\u0434\u0430 , \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0435\u0436\u0435\u043c\u0435\u0441\u044f\u0447\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c\u044b\u0445 \u043e\u0442 \u043a\u0443\u0440\u0438\u0446\u044b \u044f\u0438\u0446 , \u0430 \u0442\u0430\u043a\u0436\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043c\u0435\u0441\u0442\u043e\u043d\u0430\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0438 \u043a\u0443\u0440\u0438\u0446\u044b. \u0421\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u043e \u043f\u043e\u0440\u043e\u0434\u0435 \u0432\u043a\u043b\u044e\u0447\u0430\u044e\u0442 \u0432 \u0441\u0435\u0431\u044f: \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u0440\u043e\u0434\u044b , \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044f\u0438\u0446 \u0432 \u043c\u0435\u0441\u044f\u0446 (\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c) \u0438 \u0441\u0440\u0435\u0434\u043d\u0438\u0439 \u0432\u0435\u0441 , \u043d\u043e\u043c\u0435\u0440 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435 \u0434\u0438\u0435\u0442\u044b . \u0414\u0438\u0435\u0442\u044b \u043c\u043e\u0433\u0443\u0442 \u043c\u0435\u043d\u044f\u0442\u044c\u0441\u044f \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0441\u0435\u0437\u043e\u043d\u0430. \u041f\u0442\u0438\u0446\u0435\u0444\u0430\u0431\u0440\u0438\u043a\u0430 \u0438\u043c\u0435\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0446\u0435\u0445\u043e\u0432. \u0412 \u043a\u0430\u0436\u0434\u043e\u0439 \u043a\u043b\u0435\u0442\u043a\u0435 \u043c\u043e\u0436\u0435\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043a\u0443\u0440\u0438\u0446. \u041a\u043e\u0434 \u043a\u043b\u0435\u0442\u043a\u0438, \u0433\u0434\u0435 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u043a\u0443\u0440\u0438\u0446\u0430, \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0437\u0443\u0435\u0442\u0441\u044f \u043d\u043e\u043c\u0435\u0440\u043e\u043c \u0446\u0435\u0445\u0430, \u043d\u043e\u043c\u0435\u0440\u043e\u043c \u0440\u044f\u0434\u0430 \u0432 \u0446\u0435\u0445\u0435 \u0438 \u043d\u043e\u043c\u0435\u0440\u043e\u043c \u043a\u043b\u0435\u0442\u043a\u0438 \u0432 \u0440\u044f\u0434\u0443. \u041a\u0443\u0440\u0438\u0446\u044b \u043c\u043e\u0433\u0443\u0442 \u043f\u0435\u0440\u0435\u0441\u0430\u0436\u0438\u0432\u0430\u0442\u044c\u0441\u044f \u0438\u0437 \u043a\u043b\u0435\u0442\u043a\u0438 \u0432 \u043a\u043b\u0435\u0442\u043a\u0443. \u0414\u0438\u0440\u0435\u043a\u0442\u043e\u0440 \u043f\u0442\u0438\u0446\u0435\u0444\u0430\u0431\u0440\u0438\u043a\u0438 \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u043d\u044f\u0442\u044c \u0438\u043b\u0438 \u0443\u0432\u043e\u043b\u0438\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u0430. \u041e \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u0430\u0445 \u043f\u0442\u0438\u0446\u0435\u0444\u0430\u0431\u0440\u0438\u043a\u0438 \u0432 \u0411\u0414 \u0434\u043e\u043b\u0436\u043d\u0430 \u0445\u0440\u0430\u043d\u0438\u0442\u044c\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f: \u043f\u0430\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 , \u0437\u0430\u0440\u043f\u043b\u0430\u0442\u0430 , \u0434\u043e\u0433\u043e\u0432\u043e\u0440 \u043e \u0442\u0440\u0443\u0434\u043e\u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 , \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0431 \u0443\u0432\u043e\u043b\u044c\u043d\u0435\u043d\u0438\u0438 , \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u043d\u044b\u0435 \u0437\u0430 \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u043e\u043c \u043a\u043b\u0435\u0442\u043a\u0438 . \u041d\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u043a\u0443\u0440\u0438\u0446, \u043d\u0435 \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0445 \u043d\u0438 \u043e\u0434\u043d\u0438\u043c \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u043e\u043c. \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0443\u0440\u0438\u0446 \u043c\u043e\u0436\u0435\u0442 \u0438\u0437\u043c\u0435\u043d\u044f\u0442\u044c\u0441\u044f \u043a\u0430\u043a \u0432 \u0431\u043e\u043b\u044c\u0448\u0443\u044e, \u0442\u0430\u043a \u0438 \u0432 \u043c\u0435\u043d\u044c\u0448\u0443\u044e \u0441\u0442\u043e\u0440\u043e\u043d\u0443, \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0435 \u043c\u043e\u043c\u0435\u043d\u0442\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0447\u0430\u0441\u0442\u044c \u043a\u043b\u0435\u0442\u043e\u043a \u043c\u043e\u0436\u0435\u0442 \u043f\u0443\u0441\u0442\u043e\u0432\u0430\u0442\u044c. \u0414\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0443 \u043c\u043e\u0433\u0443\u0442 \u043f\u043e\u0442\u0440\u0435\u0431\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u044f: \u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044f\u0438\u0446, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043a\u0430\u0436\u0434\u044b\u0439 \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a \u043e\u0442 \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0445 \u0438\u043c \u043a\u0443\u0440? \u0421\u043a\u043e\u043b\u044c\u043a\u043e \u043a\u0443\u0440 \u043a\u0430\u0436\u0434\u043e\u0439 \u043f\u043e\u0440\u043e\u0434\u044b \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u0446\u0435\u0445\u0435? \u041a\u0430\u043a\u043e\u0432\u0430 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u043f\u043e\u0440\u043e\u0434\u044b \u0440\u0430\u0437\u043d\u0438\u0446\u0430 \u043c\u0435\u0436\u0434\u0443 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f\u043c\u0438 \u043f\u043e\u0440\u043e\u0434\u044b \u0438 \u0441\u0440\u0435\u0434\u043d\u0438\u043c\u0438 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f\u043c\u0438 \u043f\u043e \u043f\u0442\u0438\u0446\u0435\u0444\u0430\u0431\u0440\u0438\u043a\u0435? \u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0441\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043e\u0442\u0447\u0435\u0442 \u043e \u0440\u0430\u0431\u043e\u0442\u0435 \u043f\u0442\u0438\u0446\u0435\u0444\u0430\u0431\u0440\u0438\u043a\u0438 \u0437\u0430 \u043f\u0440\u043e\u0448\u0435\u0434\u0448\u0438\u0439 \u043c\u0435\u0441\u044f\u0446. \u041e\u0442\u0447\u0435\u0442 \u0434\u043e\u043b\u0436\u0435\u043d \u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e: \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044f\u0438\u0446 , \u043a\u0443\u0440\u0438\u0446 \u0438 \u0441\u0440\u0435\u0434\u043d\u044f\u044f \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043f\u043e \u043a\u0430\u0436\u0434\u043e\u0439 \u043f\u043e\u0440\u043e\u0434\u0435 \u043f\u043e \u0446\u0435\u0445\u0430\u043c , \u043e\u0431\u0449\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0443\u0440 \u043d\u0430 \u0444\u0430\u0431\u0440\u0438\u043a\u0435 , \u043e\u0431\u0449\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044f\u0438\u0446 , \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0435 \u043f\u0442\u0438\u0446\u0435\u0444\u0430\u0431\u0440\u0438\u043a\u043e\u0439.","title":"\u0414\u043e\u043c\u0435\u043d"},{"location":"Domain/#er-","text":"","title":"ER-\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u0430 \u0411\u0414"},{"location":"Model/","text":"\u041c\u043e\u0434\u0435\u043b\u044c \u041c\u043e\u0434\u0435\u043b\u044c \u0432\u0441\u0435\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0431\u044b\u043b\u0430 \u0440\u0430\u0437\u0431\u0438\u0442\u0430 \u043d\u0430 2 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f: chicken_app enterprise_app Chicken_app from django.db import models from enterprise_app.models import Cage class Diet(models.Model): name = models.CharField(max_length=255) content = models.TextField() def __str__(self): return self.name class Breed(models.Model): name = models.CharField(max_length=255) average_monthly_egg_rate = models.IntegerField() average_weight = models.IntegerField() recommended_diet = models.ForeignKey(Diet, on_delete=models.DO_NOTHING) def __str__(self): return self.name class Chicken(models.Model): weight = models.IntegerField() birth_date = models.DateField() monthly_egg_rate = models.IntegerField() breed = models.ForeignKey(Breed, on_delete=models.DO_NOTHING) cage = models.ForeignKey(Cage, on_delete=models.DO_NOTHING, related_name=\"cage_chicken\") Enterprise_app from django.db import models from django.contrib.auth.models import AbstractUser from .value_objects import Location class User(AbstractUser): ROLE_CHOICES = ( (\"W\", \"Worker\"), (\"D\", \"Director\") ) role = models.CharField(choices=ROLE_CHOICES, max_length=1) passport = models.CharField(max_length=10) salary = models.IntegerField() employment_contract_id = models.IntegerField() dismissal_agreement_id = models.IntegerField(null=True) REQUIRED_FIELDS = [\"password\", \"role\", \"passport\", \"salary\", \"employment_contract_id\"] def __str__(self): return self.passport class Facility(models.Model): name = models.CharField(max_length=255) _longitude = models.FloatField() _latitude = models.FloatField() @property def location(self) -> Location: return Location(self._longitude, self._latitude) @location.setter def location(self, value: Location) -> None: self._longitude = value.longitude self._latitude = value.latitude def __str__(self): return self.name class Cage(models.Model): facility = models.ForeignKey(Facility, on_delete=models.DO_NOTHING) row = models.IntegerField() column = models.IntegerField() responsible = models.ForeignKey(User, on_delete=models.DO_NOTHING) def __str__(self): return f\"row: {self.row}, column: {self.column}\" \u0412 enterprise_app \u0431\u044b\u043b \u0432\u044b\u0434\u0435\u043b\u0435\u043d value object Location , \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u0442\u043e\u0447\u043a\u0438. \u041a\u043b\u0430\u0441\u0441 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044e \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0435\u043c\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 __post_init__ . \u0422\u0430\u043a\u0436\u0435 \u043a\u043b\u0430\u0441\u0441 \u0432 \u0441\u0435\u0431\u0435 \u043b\u043e\u0433\u0438\u043a\u0443 \u0440\u0430\u0441\u0447\u0435\u0442\u0430 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u043c\u0435\u0436\u0434\u0443 \u0434\u0432\u0443\u043c\u044f \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0430\u043c\u0438. value_objects.py from dataclasses import dataclass from .exceptions import LocationException from math import pi, atan2, cos, sin, sqrt @dataclass(frozen=True) class Location: longitude: float latitude: float \"\"\" Radian value of longitude \"\"\" @property def longitude_rad(self) -> float: return self.longitude * pi / 180 \"\"\" Radian value of latitude \"\"\" @property def latitude_rad(self) -> float: return self.longitude * pi / 180 def __post_init__(self): if not -180 < self.longitude < 180: raise LocationException(\"Longitude value should be in range [-180, 180]\") if not -90 < self.latitude < 90: raise LocationException(\"Latitude value should be in range [-90, 90]\") \"\"\" Calculate distance between two locations in meters \"\"\" def distance_to(self, other: \"Location\") -> float: r = 6_371_000 # Earth radius in meters phi_1 = self.latitude_rad phi_2 = other.latitude_rad delta_phi = (other.latitude - self.latitude) * pi / 180 delta_lambda = (other.longitude - self.latitude) * pi / 180 a = sin(delta_phi / 2) ** 2 + cos(phi_1) * cos(phi_2) * sin(delta_lambda / 2) ** 2 c = 2 * atan2(sqrt(a), sqrt(1 - a)) return r * c # distance between two locations in meters def __str__(self): return f\"(longitude: {self.longitude}, latitude: {self.latitude})\"","title":"\u041c\u043e\u0434\u0435\u043b\u044c"},{"location":"Model/#_1","text":"\u041c\u043e\u0434\u0435\u043b\u044c \u0432\u0441\u0435\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0431\u044b\u043b\u0430 \u0440\u0430\u0437\u0431\u0438\u0442\u0430 \u043d\u0430 2 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f: chicken_app enterprise_app","title":"\u041c\u043e\u0434\u0435\u043b\u044c"},{"location":"Model/#chicken_app","text":"from django.db import models from enterprise_app.models import Cage class Diet(models.Model): name = models.CharField(max_length=255) content = models.TextField() def __str__(self): return self.name class Breed(models.Model): name = models.CharField(max_length=255) average_monthly_egg_rate = models.IntegerField() average_weight = models.IntegerField() recommended_diet = models.ForeignKey(Diet, on_delete=models.DO_NOTHING) def __str__(self): return self.name class Chicken(models.Model): weight = models.IntegerField() birth_date = models.DateField() monthly_egg_rate = models.IntegerField() breed = models.ForeignKey(Breed, on_delete=models.DO_NOTHING) cage = models.ForeignKey(Cage, on_delete=models.DO_NOTHING, related_name=\"cage_chicken\")","title":"Chicken_app"},{"location":"Model/#enterprise_app","text":"from django.db import models from django.contrib.auth.models import AbstractUser from .value_objects import Location class User(AbstractUser): ROLE_CHOICES = ( (\"W\", \"Worker\"), (\"D\", \"Director\") ) role = models.CharField(choices=ROLE_CHOICES, max_length=1) passport = models.CharField(max_length=10) salary = models.IntegerField() employment_contract_id = models.IntegerField() dismissal_agreement_id = models.IntegerField(null=True) REQUIRED_FIELDS = [\"password\", \"role\", \"passport\", \"salary\", \"employment_contract_id\"] def __str__(self): return self.passport class Facility(models.Model): name = models.CharField(max_length=255) _longitude = models.FloatField() _latitude = models.FloatField() @property def location(self) -> Location: return Location(self._longitude, self._latitude) @location.setter def location(self, value: Location) -> None: self._longitude = value.longitude self._latitude = value.latitude def __str__(self): return self.name class Cage(models.Model): facility = models.ForeignKey(Facility, on_delete=models.DO_NOTHING) row = models.IntegerField() column = models.IntegerField() responsible = models.ForeignKey(User, on_delete=models.DO_NOTHING) def __str__(self): return f\"row: {self.row}, column: {self.column}\" \u0412 enterprise_app \u0431\u044b\u043b \u0432\u044b\u0434\u0435\u043b\u0435\u043d value object Location , \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u0442\u043e\u0447\u043a\u0438. \u041a\u043b\u0430\u0441\u0441 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044e \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0435\u043c\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 __post_init__ . \u0422\u0430\u043a\u0436\u0435 \u043a\u043b\u0430\u0441\u0441 \u0432 \u0441\u0435\u0431\u0435 \u043b\u043e\u0433\u0438\u043a\u0443 \u0440\u0430\u0441\u0447\u0435\u0442\u0430 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u043c\u0435\u0436\u0434\u0443 \u0434\u0432\u0443\u043c\u044f \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0430\u043c\u0438. value_objects.py from dataclasses import dataclass from .exceptions import LocationException from math import pi, atan2, cos, sin, sqrt @dataclass(frozen=True) class Location: longitude: float latitude: float \"\"\" Radian value of longitude \"\"\" @property def longitude_rad(self) -> float: return self.longitude * pi / 180 \"\"\" Radian value of latitude \"\"\" @property def latitude_rad(self) -> float: return self.longitude * pi / 180 def __post_init__(self): if not -180 < self.longitude < 180: raise LocationException(\"Longitude value should be in range [-180, 180]\") if not -90 < self.latitude < 90: raise LocationException(\"Latitude value should be in range [-90, 90]\") \"\"\" Calculate distance between two locations in meters \"\"\" def distance_to(self, other: \"Location\") -> float: r = 6_371_000 # Earth radius in meters phi_1 = self.latitude_rad phi_2 = other.latitude_rad delta_phi = (other.latitude - self.latitude) * pi / 180 delta_lambda = (other.longitude - self.latitude) * pi / 180 a = sin(delta_phi / 2) ** 2 + cos(phi_1) * cos(phi_2) * sin(delta_lambda / 2) ** 2 c = 2 * atan2(sqrt(a), sqrt(1 - a)) return r * c # distance between two locations in meters def __str__(self): return f\"(longitude: {self.longitude}, latitude: {self.latitude})\"","title":"Enterprise_app"},{"location":"Statistics/","text":"Statistics \u0411\u044b\u043b\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u044b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043f\u0443\u043d\u043a\u0442\u044b \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438 (\u0431\u044b\u043b \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d RBAC : \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u0442\u043e\u043b\u044c\u043a\u043e \u0414\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0443 - \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u0441 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0449\u0435\u0439 \u0440\u043e\u043b\u044c\u044e) \u041a\u0430\u043a\u043e\u0432\u0430 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u043f\u043e\u0440\u043e\u0434\u044b \u0440\u0430\u0437\u043d\u0438\u0446\u0430 \u043c\u0435\u0436\u0434\u0443 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f\u043c\u0438 \u043f\u043e\u0440\u043e\u0434\u044b \u0438 \u0441\u0440\u0435\u0434\u043d\u0438\u043c\u0438 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f\u043c\u0438 \u043f\u043e \u043f\u0442\u0438\u0446\u0435\u0444\u0430\u0431\u0440\u0438\u043a\u0435? GET /breeds/statistics \u0424\u043e\u0440\u043c\u0430\u0442 \u043e\u0442\u0432\u0435\u0442\u0430 { \"breed_name1\": { \"weight\": 4.0, \"egg_rate\": 0.0 }, \"breed_name2\": { \"weight\": 0.0, \"egg_rate\": -4.0 } } \u0421\u043a\u043e\u043b\u044c\u043a\u043e \u043a\u0443\u0440 \u043a\u0430\u0436\u0434\u043e\u0439 \u043f\u043e\u0440\u043e\u0434\u044b \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u0446\u0435\u0445\u0435? GET /facilities/statistics/chicken_by_breed \u0424\u043e\u0440\u043c\u0430\u0442 \u043e\u0442\u0432\u0435\u0442\u0430 { \"facility_name\": [ { \"breed_name1\": 1 }, { \"breed_name2\": 2 } ] } \u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044f\u0438\u0446, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043a\u0430\u0436\u0434\u044b\u0439 \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a \u043e\u0442 \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0445 \u0438\u043c \u043a\u0443\u0440? GET /staff/statistics \u0424\u043e\u0440\u043c\u0430\u0442 \u043e\u0442\u0432\u0435\u0442\u0430 [ { \"id\": 1, \"username\": \"janill\", \"average_eggs\": 5.0 } ] \u041e\u0442\u0447\u0435\u0442 \u043e \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043f\u0442\u0438\u0446\u0435\u0444\u0430\u0431\u0440\u0438\u043a\u0438 GET /report \u0424\u043e\u0440\u043c\u0430\u0442 \u043e\u0442\u0432\u0435\u0442\u0430 { \"total_eggs\": 15, \"total_chickens\": 3, \"average_productivity_per_breed\": [ { \"name\": \"breed_1\", \"average_productivity\": 5.0 }, { \"name\": \"breed_2\", \"average_productivity\": 5.0 } ] }","title":"Statistics"},{"location":"Statistics/#statistics","text":"\u0411\u044b\u043b\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u044b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043f\u0443\u043d\u043a\u0442\u044b \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438 (\u0431\u044b\u043b \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d RBAC : \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u0442\u043e\u043b\u044c\u043a\u043e \u0414\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0443 - \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u0441 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0449\u0435\u0439 \u0440\u043e\u043b\u044c\u044e)","title":"Statistics"},{"location":"Statistics/#_1","text":"GET /breeds/statistics","title":"\u041a\u0430\u043a\u043e\u0432\u0430 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u043f\u043e\u0440\u043e\u0434\u044b \u0440\u0430\u0437\u043d\u0438\u0446\u0430 \u043c\u0435\u0436\u0434\u0443 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f\u043c\u0438 \u043f\u043e\u0440\u043e\u0434\u044b \u0438 \u0441\u0440\u0435\u0434\u043d\u0438\u043c\u0438 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f\u043c\u0438 \u043f\u043e \u043f\u0442\u0438\u0446\u0435\u0444\u0430\u0431\u0440\u0438\u043a\u0435?"},{"location":"Statistics/#_2","text":"{ \"breed_name1\": { \"weight\": 4.0, \"egg_rate\": 0.0 }, \"breed_name2\": { \"weight\": 0.0, \"egg_rate\": -4.0 } }","title":"\u0424\u043e\u0440\u043c\u0430\u0442 \u043e\u0442\u0432\u0435\u0442\u0430"},{"location":"Statistics/#_3","text":"GET /facilities/statistics/chicken_by_breed","title":"\u0421\u043a\u043e\u043b\u044c\u043a\u043e \u043a\u0443\u0440 \u043a\u0430\u0436\u0434\u043e\u0439 \u043f\u043e\u0440\u043e\u0434\u044b \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u0446\u0435\u0445\u0435?"},{"location":"Statistics/#_4","text":"{ \"facility_name\": [ { \"breed_name1\": 1 }, { \"breed_name2\": 2 } ] }","title":"\u0424\u043e\u0440\u043c\u0430\u0442 \u043e\u0442\u0432\u0435\u0442\u0430"},{"location":"Statistics/#_5","text":"GET /staff/statistics","title":"\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044f\u0438\u0446, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043a\u0430\u0436\u0434\u044b\u0439 \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a \u043e\u0442 \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0445 \u0438\u043c \u043a\u0443\u0440?"},{"location":"Statistics/#_6","text":"[ { \"id\": 1, \"username\": \"janill\", \"average_eggs\": 5.0 } ]","title":"\u0424\u043e\u0440\u043c\u0430\u0442 \u043e\u0442\u0432\u0435\u0442\u0430"},{"location":"Statistics/#_7","text":"GET /report","title":"\u041e\u0442\u0447\u0435\u0442 \u043e \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043f\u0442\u0438\u0446\u0435\u0444\u0430\u0431\u0440\u0438\u043a\u0438"},{"location":"Statistics/#_8","text":"{ \"total_eggs\": 15, \"total_chickens\": 3, \"average_productivity_per_breed\": [ { \"name\": \"breed_1\", \"average_productivity\": 5.0 }, { \"name\": \"breed_2\", \"average_productivity\": 5.0 } ] }","title":"\u0424\u043e\u0440\u043c\u0430\u0442 \u043e\u0442\u0432\u0435\u0442\u0430"},{"location":"practice_3.1/","text":"\u041f\u0440\u0430\u043a\u0442\u0438\u043a\u0430 3.1 \u0417\u0430\u0434\u0430\u0447\u0430 1 \u041c\u043e\u0434\u0435\u043b\u044c \u041c\u043e\u0434\u0435\u043b\u044c \u0431\u044b\u043b\u0430 \u0432\u0437\u044f\u0442\u0430 \u0438\u0437 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0439 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b from django.db import models class Car(models.Model): license_plate = models.CharField(max_length=15) brand = models.CharField(max_length=20) model = models.CharField(max_length=20) color = models.CharField(max_length=30) def __str__(self): return f\"Car(license_plate={self.license_plate}, brand={self.brand}, model={self.model}, color={self.color})\" class CarOwner(models.Model): first_name = models.CharField(max_length=30, null=True) last_name = models.CharField(max_length=30, null=True) birth_date = models.DateTimeField(null=True) passport = models.CharField(max_length=10, null=True) home_Address = models.CharField(max_length=200, null=True) nationality = models.CharField(max_length=100, null=True) owner = models.ManyToManyField(Car, through='Ownership') def __str__(self): return f\"CarOwner(first_name={self.first_name}, last_name={self.last_name}, birth_date={self.birth_date}, \" \\ f\"passport={self.passport}, home_Address={self.home_Address}, nationality={self.nationality})\" class Ownership(models.Model): car = models.ForeignKey(Car, on_delete=models.CASCADE) owner = models.ForeignKey(CarOwner, on_delete=models.DO_NOTHING) date_start = models.DateTimeField() date_end = models.DateTimeField(null=True) def __str__(self): return f\"Ownership(car={self.car}, owner={self.owner}, date_start={self.date_start}, date_end={self.date_end})\" class DriverLicense(models.Model): owner = models.ForeignKey(CarOwner, on_delete=models.CASCADE) number = models.CharField(max_length=10) license_type = models.CharField(max_length=10) issue_date = models.DateTimeField() def __str__(self): return f\"DriverLicense(owner={self.owner}, number={self.number}, license_type={self.license_type}, issue_date={self.issue_date})\" \u0417\u0430\u043f\u0440\u043e\u0441\u044b \u0410\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u044b \u0421\u043a\u0440\u0438\u043f\u0442 owner1 = CarOwner.objects.create(first_name=\"1\", last_name=\"1\", birth_date=datetime.datetime.now(), passport=\"1\", home_Address=\"1\", nationality=\"1\") owner2 = CarOwner.objects.create(first_name=\"2\", last_name=\"2\", birth_date=datetime.datetime.now(), passport=\"2\", home_Address=\"2\", nationality=\"2\") owner3 = CarOwner.objects.create(first_name=\"3\", last_name=\"3\", birth_date=datetime.datetime.now(), passport=\"3\", home_Address=\"3\", nationality=\"3\") owner4 = CarOwner.objects.create(first_name=\"4\", last_name=\"4\", birth_date=datetime.datetime.now(), passport=\"4\", home_Address=\"4\", nationality=\"4\") owner5 = CarOwner.objects.create(first_name=\"5\", last_name=\"5\", birth_date=datetime.datetime.now(), passport=\"5\", home_Address=\"5\", nationality=\"5\") owner6 = CarOwner.objects.create(first_name=\"6\", last_name=\"6\", birth_date=datetime.datetime.now(), passport=\"6\", home_Address=\"6\", nationality=\"6\") \u0412\u044b\u0432\u043e\u0434 >>> CarOwner.objects.all() <QuerySet [<CarOwner: CarOwner(first_name=1, last_name=1, birth_date=2023-11-24 20:56:30.905200+00:00, passport=1, home_Address=1, nationality=1)>, <CarOwner: CarOwner(first_name=2, last_ name=2, birth_date=2023-11-24 20:58:29.691257+00:00, passport=2, home_Address=2, nationality=2)>, <CarOwner: CarOwner(first_name=3, last_name=3, birth_date=2023-11-24 20:58:29.701066+00:0 0, passport=3, home_Address=3, nationality=3)>, <CarOwner: CarOwner(first_name=4, last_name=4, birth_date=2023-11-24 20:58:29.717073+00:00, passport=4, home_Address=4, nationality=4)>, <C arOwner: CarOwner(first_name=5, last_name=5, birth_date=2023-11-24 20:58:29.725866+00:00, passport=5, home_Address=5, nationality=5)>, <CarOwner: CarOwner(first_name=6, last_name=6, birth _date=2023-11-24 20:58:29.734116+00:00, passport=6, home_Address=6, nationality=6)>]> \u0423\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0421\u043a\u0440\u0438\u043f\u0442 DriverLicense.objects.create(owner=owner1, number=\"1\", license_type=\"B\", issue_date=datetime.datetime.now()) DriverLicense.objects.create(owner=owner2, number=\"2\", license_type=\"B\", issue_date=datetime.datetime.now()) DriverLicense.objects.create(owner=owner3, number=\"3\", license_type=\"B\", issue_date=datetime.datetime.now()) DriverLicense.objects.create(owner=owner4, number=\"4\", license_type=\"B\", issue_date=datetime.datetime.now()) DriverLicense.objects.create(owner=owner5, number=\"5\", license_type=\"B\", issue_date=datetime.datetime.now()) DriverLicense.objects.create(owner=owner6, number=\"6\", license_type=\"B\", issue_date=datetime.datetime.now()) \u0412\u044b\u0432\u043e\u0434 >>> DriverLicense.objects.all() <QuerySet [<DriverLicense: DriverLicense(owner=CarOwner(first_name=1, last_name=1, birth_date=2023-11-24 20:56:30.905200+00:00, passport=1, home_Address=1, nationality=1), number=1, licen se_type=B, issue_date=2023-11-24 21:01:49.146607+00:00)>, <DriverLicense: DriverLicense(owner=CarOwner(first_name=2, last_name=2, birth_date=2023-11-24 20:58:29.691257+00:00, passport=2, home_Address=2, nationality=2), number=2, license_type=B, issue_date=2023-11-24 21:01:49.193053+00:00)>, <DriverLicense: DriverLicense(owner=CarOwner(first_name=3, last_name=3, birth_date =2023-11-24 20:58:29.701066+00:00, passport=3, home_Address=3, nationality=3), number=3, license_type=B, issue_date=2023-11-24 21:01:49.208716+00:00)>, <DriverLicense: DriverLicense(owner =CarOwner(first_name=4, last_name=4, birth_date=2023-11-24 20:58:29.717073+00:00, passport=4, home_Address=4, nationality=4), number=4, license_type=B, issue_date=2023-11-24 21:01:49.2243 37+00:00)>, <DriverLicense: DriverLicense(owner=CarOwner(first_name=5, last_name=5, birth_date=2023-11-24 20:58:29.725866+00:00, passport=5, home_Address=5, nationality=5), number=5, lice nse_type=B, issue_date=2023-11-24 21:01:49.224337+00:00)>, <DriverLicense: DriverLicense(owner=CarOwner(first_name=6, last_name=6, birth_date=2023-11-24 20:58:29.734116+00:00, passport=6, home_Address=6, nationality=6), number=6, license_type=B, issue_date=2023-11-24 21:01:52.179825+00:00)>]> \u0410\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438 \u0421\u043a\u0440\u0438\u043f\u0442 car1 = Car.objects.create(license_plate=\"1\", brand=\"Toyota\", model=\"Camry\", color=\"black\") car2 = Car.objects.create(license_plate=\"2\", brand=\"Toyota\", model=\"Corolla\", color=\"black\") car3 = Car.objects.create(license_plate=\"3\", brand=\"Lada\", model=\"Vesta\", color=\"black\") car4 = Car.objects.create(license_plate=\"4\", brand=\"Mitsubishi\", model=\"Lancer\", color=\"black\") car5 = Car.objects.create(license_plate=\"5\", brand=\"Honda\", model=\"Civic\", color=\"black\") \u0412\u044b\u0432\u043e\u0434 >>> Car.objects.all() <QuerySet [<Car: Car(license_plate=1, brand=Toyota, model=Camry, color=black)>, <Car: Car(license_plate=2, brand=Toyota, model=Corolla, color=black)>, <Car: Car(license_plate=3, brand=Lad a, model=Vesta, color=black)>, <Car: Car(license_plate=4, brand=Mitsubishi, model=Lancer, color=black)>, <Car: Car(license_plate=5, brand=Honda, model=Civic, color=black)>]> \u0412\u043b\u0430\u0434\u0435\u043d\u0438\u0435 \u0421\u043a\u0440\u0438\u043f\u0442 ownership1 = Ownership.objects.create(owner=owner1, car=car1, date_start=datetime.datetime.now()) ownership2 = Ownership.objects.create(owner=owner2, car=car2, date_start=datetime.datetime.now()) ownership3 = Ownership.objects.create(owner=owner3, car=car3, date_start=datetime.datetime.now()) ownership4 = Ownership.objects.create(owner=owner4, car=car4, date_start=datetime.datetime.now()) ownership5 = Ownership.objects.create(owner=owner5, car=car5, date_start=datetime.datetime.now()) ownership6 = Ownership.objects.create(owner=owner6, car=car5, date_start=datetime.datetime.now()) \u0412\u044b\u0432\u043e\u0434 >>> Ownership.objects.all() <QuerySet [<Ownership: Ownership(car=Car(license_plate=1, brand=Toyota, model=Camry, color=black), owner=CarOwner(first_name=1, last_name=1, birth_date=2023-11-24 20:56:30.905200+00:00, p assport=1, home_Address=1, nationality=1), date_start=2023-11-24 21:19:20.875803+00:00, date_end=None)>, <Ownership: Ownership(car=Car(license_plate=2, brand=Toyota, model=Corolla, color= black), owner=CarOwner(first_name=2, last_name=2, birth_date=2023-11-24 20:58:29.691257+00:00, passport=2, home_Address=2, nationality=2), date_start=2023-11-24 21:19:20.960060+00:00, dat e_end=None)>, <Ownership: Ownership(car=Car(license_plate=3, brand=Lada, model=Vesta, color=black), owner=CarOwner(first_name=3, last_name=3, birth_date=2023-11-24 20:58:29.701066+00:00, passport=3, home_Address=3, nationality=3), date_start=2023-11-24 21:19:20.960060+00:00, date_end=None)>, <Ownership: Ownership(car=Car(license_plate=4, brand=Mitsubishi, model=Lancer, co lor=black), owner=CarOwner(first_name=4, last_name=4, birth_date=2023-11-24 20:58:29.717073+00:00, passport=4, home_Address=4, nationality=4), date_start=2023-11-24 21:19:20.975719+00:00, date_end=None)>, <Ownership: Ownership(car=Car(license_plate=5, brand=Honda, model=Civic, color=black), owner=CarOwner(first_name=5, last_name=5, birth_date=2023-11-24 20:58:29.725866+00 :00, passport=5, home_Address=5, nationality=5), date_start=2023-11-24 21:19:20.975719+00:00, date_end=None)>, <Ownership: Ownership(car=Car(license_plate=5, brand=Honda, model=Civic, col or=black), owner=CarOwner(first_name=6, last_name=6, birth_date=2023-11-24 20:58:29.734116+00:00, passport=6, home_Address=6, nationality=6), date_start=2023-11-24 21:19:25.046156+00:00, date_end=None)>]> \u0417\u0430\u0434\u0430\u0447\u0430 2 \u0412\u044b\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0441\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043c\u0430\u0440\u043a\u0438 \u201cToyota\u201d \u0421\u043a\u0440\u0438\u043f\u0442 Car.objects.filter(brand=\"Toyota\") \u0412\u044b\u0432\u043e\u0434 <QuerySet [<Car: Car(license_plate=1, brand=Toyota, model=Camry, color=black)>, <Car: Car(license_plate=2, brand=Toyota, model=Corolla, color=black)>]> \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u201c1\u201d \u0421\u043a\u0440\u0438\u043f\u0442 CarOwner.objects.filter(first_name=\"1\") \u0412\u044b\u0432\u043e\u0434 <QuerySet [<CarOwner: CarOwner(first_name=1, last_name=1, birth_date=2023-11-24 20:56:30.905200+00:00, passport=1, home_Address=1, nationality=1)>]> \u0412\u0437\u044f\u0432 \u043b\u044e\u0431\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0435\u0433\u043e id, \u0438 \u043f\u043e \u044d\u0442\u043e\u043c\u0443 id \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 \u0421\u043a\u0440\u0438\u043f\u0442 desired_owner_id = CarOwner.objects.get(first_name=\"1\").id DriverLicense.objects.get(owner__id=desired_owner_id) \u0412\u044b\u0432\u043e\u0434 <DriverLicense: DriverLicense(owner=CarOwner(first_name=1, last_name=1, birth_date=2023-11-24 20:56:30.905200+00:00, passport=1, home_Address=1, nationality=1), number=1, license_type=B, issue_date=2023-11-24 21:01:49.146607+00:00)> \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0447\u0435\u0440\u043d\u044b\u0445 \u043c\u0430\u0448\u0438\u043d \u0421\u043a\u0440\u0438\u043f\u0442 CarOwner.objects.filter(ownership__car__color=\"black\") \u0412\u044b\u0432\u043e\u0434 <QuerySet [<CarOwner: CarOwner(first_name=1, last_name=1, birth_date=2023-11-24 20:56:30.905200+00:00, passport=1, home_Address=1, nationality=1)>, <CarOwner: CarOwner(first_name=2, last_ name=2, birth_date=2023-11-24 20:58:29.691257+00:00, passport=2, home_Address=2, nationality=2)>, <CarOwner: CarOwner(first_name=3, last_name=3, birth_date=2023-11-24 20:58:29.701066+00:0 0, passport=3, home_Address=3, nationality=3)>, <CarOwner: CarOwner(first_name=4, last_name=4, birth_date=2023-11-24 20:58:29.717073+00:00, passport=4, home_Address=4, nationality=4)>, <C arOwner: CarOwner(first_name=5, last_name=5, birth_date=2023-11-24 20:58:29.725866+00:00, passport=5, home_Address=5, nationality=5)>, <CarOwner: CarOwner(first_name=6, last_name=6, birth _date=2023-11-24 20:58:29.734116+00:00, passport=6, home_Address=6, nationality=6)>]> \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0447\u0435\u0439 \u0433\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 2023 \u0421\u043a\u0440\u0438\u043f\u0442 CarOwner.objects.filter(driverlicense__issue_date__year=2023) \u0412\u044b\u0432\u043e\u0434 <QuerySet [<CarOwner: CarOwner(first_name=1, last_name=1, birth_date=2023-11-24 20:56:30.905200+00:00, passport=1, home_Address=1, nationality=1)>, <CarOwner: CarOwner(first_name=2, last_ name=2, birth_date=2023-11-24 20:58:29.691257+00:00, passport=2, home_Address=2, nationality=2)>, <CarOwner: CarOwner(first_name=3, last_name=3, birth_date=2023-11-24 20:58:29.701066+00:0 0, passport=3, home_Address=3, nationality=3)>, <CarOwner: CarOwner(first_name=4, last_name=4, birth_date=2023-11-24 20:58:29.717073+00:00, passport=4, home_Address=4, nationality=4)>, <C arOwner: CarOwner(first_name=5, last_name=5, birth_date=2023-11-24 20:58:29.725866+00:00, passport=5, home_Address=5, nationality=5)>, <CarOwner: CarOwner(first_name=6, last_name=6, birth _date=2023-11-24 20:58:29.734116+00:00, passport=6, home_Address=6, nationality=6)>]> \u0417\u0430\u0434\u0430\u0447\u0430 3 \u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u0442\u044b \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u0448\u0435\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0421\u043a\u0440\u0438\u043f\u0442 from django.db.models import Min DriverLicense.objects.aggregate(earliest_date=Min(\"issue_date\")) \u0412\u044b\u0432\u043e\u0434 {'earliest_date': datetime.datetime(2023, 11, 24, 21, 1, 49, 146607, tzinfo=datetime.timezone.utc)} \u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439, \u0438\u043c\u0435\u044e\u0449\u0443\u044e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0432\u0430\u0448\u0435\u0439 \u0431\u0430\u0437\u0435 \u0421\u043a\u0440\u0438\u043f\u0442 from django.db.models import Max Ownership.objects.aggregate(latest_ownership=Max(\"date_end\")) \u0412\u044b\u0432\u043e\u0434 {'latest_ownership': None} \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f \u0421\u043a\u0440\u0438\u043f\u0442 from django.db.models import Count annotated = CarOwner.objects.annotate(Count(\"owner\")) for owner in annotated: print(owner.first_name, owner.owner__count) \u0412\u044b\u0432\u043e\u0434 1 1 2 1 3 1 4 1 5 1 6 1 \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438 \u0421\u043a\u0440\u0438\u043f\u0442 from django.db.models import Count Car.objects.values(\"brand\").annotate(Count(\"id\")) \u0412\u044b\u0432\u043e\u0434 <QuerySet [{'brand': 'Honda', 'id__count': 1}, {'brand': 'Lada', 'id__count': 1}, {'brand': 'Mitsubishi', 'id__count': 1}, {'brand': 'Toyota', 'id__count': 2}]> \u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0421\u043a\u0440\u0438\u043f\u0442 CarOwner.objects.order_by(\"driverlicense__issue_date\") \u0412\u044b\u0432\u043e\u0434 <QuerySet [<CarOwner: CarOwner(first_name=1, last_name=1, birth_date=2023-11-24 20:56:30.905200+00:00, passport=1, home_Address=1, nationality=1)>, <CarOwner: CarOwner(first_name=2, last_ name=2, birth_date=2023-11-24 20:58:29.691257+00:00, passport=2, home_Address=2, nationality=2)>, <CarOwner: CarOwner(first_name=3, last_name=3, birth_date=2023-11-24 20:58:29.701066+00:0 0, passport=3, home_Address=3, nationality=3)>, <CarOwner: CarOwner(first_name=4, last_name=4, birth_date=2023-11-24 20:58:29.717073+00:00, passport=4, home_Address=4, nationality=4)>, <C arOwner: CarOwner(first_name=5, last_name=5, birth_date=2023-11-24 20:58:29.725866+00:00, passport=5, home_Address=5, nationality=5)>, <CarOwner: CarOwner(first_name=6, last_name=6, birth _date=2023-11-24 20:58:29.734116+00:00, passport=6, home_Address=6, nationality=6)>]>","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u043a\u0430 3.1"},{"location":"practice_3.1/#31","text":"","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u043a\u0430 3.1"},{"location":"practice_3.1/#1","text":"","title":"\u0417\u0430\u0434\u0430\u0447\u0430 1"},{"location":"practice_3.1/#_1","text":"\u041c\u043e\u0434\u0435\u043b\u044c \u0431\u044b\u043b\u0430 \u0432\u0437\u044f\u0442\u0430 \u0438\u0437 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0439 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b from django.db import models class Car(models.Model): license_plate = models.CharField(max_length=15) brand = models.CharField(max_length=20) model = models.CharField(max_length=20) color = models.CharField(max_length=30) def __str__(self): return f\"Car(license_plate={self.license_plate}, brand={self.brand}, model={self.model}, color={self.color})\" class CarOwner(models.Model): first_name = models.CharField(max_length=30, null=True) last_name = models.CharField(max_length=30, null=True) birth_date = models.DateTimeField(null=True) passport = models.CharField(max_length=10, null=True) home_Address = models.CharField(max_length=200, null=True) nationality = models.CharField(max_length=100, null=True) owner = models.ManyToManyField(Car, through='Ownership') def __str__(self): return f\"CarOwner(first_name={self.first_name}, last_name={self.last_name}, birth_date={self.birth_date}, \" \\ f\"passport={self.passport}, home_Address={self.home_Address}, nationality={self.nationality})\" class Ownership(models.Model): car = models.ForeignKey(Car, on_delete=models.CASCADE) owner = models.ForeignKey(CarOwner, on_delete=models.DO_NOTHING) date_start = models.DateTimeField() date_end = models.DateTimeField(null=True) def __str__(self): return f\"Ownership(car={self.car}, owner={self.owner}, date_start={self.date_start}, date_end={self.date_end})\" class DriverLicense(models.Model): owner = models.ForeignKey(CarOwner, on_delete=models.CASCADE) number = models.CharField(max_length=10) license_type = models.CharField(max_length=10) issue_date = models.DateTimeField() def __str__(self): return f\"DriverLicense(owner={self.owner}, number={self.number}, license_type={self.license_type}, issue_date={self.issue_date})\"","title":"\u041c\u043e\u0434\u0435\u043b\u044c"},{"location":"practice_3.1/#_2","text":"","title":"\u0417\u0430\u043f\u0440\u043e\u0441\u044b"},{"location":"practice_3.1/#_3","text":"","title":"\u0410\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u044b"},{"location":"practice_3.1/#_4","text":"owner1 = CarOwner.objects.create(first_name=\"1\", last_name=\"1\", birth_date=datetime.datetime.now(), passport=\"1\", home_Address=\"1\", nationality=\"1\") owner2 = CarOwner.objects.create(first_name=\"2\", last_name=\"2\", birth_date=datetime.datetime.now(), passport=\"2\", home_Address=\"2\", nationality=\"2\") owner3 = CarOwner.objects.create(first_name=\"3\", last_name=\"3\", birth_date=datetime.datetime.now(), passport=\"3\", home_Address=\"3\", nationality=\"3\") owner4 = CarOwner.objects.create(first_name=\"4\", last_name=\"4\", birth_date=datetime.datetime.now(), passport=\"4\", home_Address=\"4\", nationality=\"4\") owner5 = CarOwner.objects.create(first_name=\"5\", last_name=\"5\", birth_date=datetime.datetime.now(), passport=\"5\", home_Address=\"5\", nationality=\"5\") owner6 = CarOwner.objects.create(first_name=\"6\", last_name=\"6\", birth_date=datetime.datetime.now(), passport=\"6\", home_Address=\"6\", nationality=\"6\")","title":"\u0421\u043a\u0440\u0438\u043f\u0442"},{"location":"practice_3.1/#_5","text":">>> CarOwner.objects.all() <QuerySet [<CarOwner: CarOwner(first_name=1, last_name=1, birth_date=2023-11-24 20:56:30.905200+00:00, passport=1, home_Address=1, nationality=1)>, <CarOwner: CarOwner(first_name=2, last_ name=2, birth_date=2023-11-24 20:58:29.691257+00:00, passport=2, home_Address=2, nationality=2)>, <CarOwner: CarOwner(first_name=3, last_name=3, birth_date=2023-11-24 20:58:29.701066+00:0 0, passport=3, home_Address=3, nationality=3)>, <CarOwner: CarOwner(first_name=4, last_name=4, birth_date=2023-11-24 20:58:29.717073+00:00, passport=4, home_Address=4, nationality=4)>, <C arOwner: CarOwner(first_name=5, last_name=5, birth_date=2023-11-24 20:58:29.725866+00:00, passport=5, home_Address=5, nationality=5)>, <CarOwner: CarOwner(first_name=6, last_name=6, birth _date=2023-11-24 20:58:29.734116+00:00, passport=6, home_Address=6, nationality=6)>]>","title":"\u0412\u044b\u0432\u043e\u0434"},{"location":"practice_3.1/#_6","text":"","title":"\u0423\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f"},{"location":"practice_3.1/#_7","text":"DriverLicense.objects.create(owner=owner1, number=\"1\", license_type=\"B\", issue_date=datetime.datetime.now()) DriverLicense.objects.create(owner=owner2, number=\"2\", license_type=\"B\", issue_date=datetime.datetime.now()) DriverLicense.objects.create(owner=owner3, number=\"3\", license_type=\"B\", issue_date=datetime.datetime.now()) DriverLicense.objects.create(owner=owner4, number=\"4\", license_type=\"B\", issue_date=datetime.datetime.now()) DriverLicense.objects.create(owner=owner5, number=\"5\", license_type=\"B\", issue_date=datetime.datetime.now()) DriverLicense.objects.create(owner=owner6, number=\"6\", license_type=\"B\", issue_date=datetime.datetime.now())","title":"\u0421\u043a\u0440\u0438\u043f\u0442"},{"location":"practice_3.1/#_8","text":">>> DriverLicense.objects.all() <QuerySet [<DriverLicense: DriverLicense(owner=CarOwner(first_name=1, last_name=1, birth_date=2023-11-24 20:56:30.905200+00:00, passport=1, home_Address=1, nationality=1), number=1, licen se_type=B, issue_date=2023-11-24 21:01:49.146607+00:00)>, <DriverLicense: DriverLicense(owner=CarOwner(first_name=2, last_name=2, birth_date=2023-11-24 20:58:29.691257+00:00, passport=2, home_Address=2, nationality=2), number=2, license_type=B, issue_date=2023-11-24 21:01:49.193053+00:00)>, <DriverLicense: DriverLicense(owner=CarOwner(first_name=3, last_name=3, birth_date =2023-11-24 20:58:29.701066+00:00, passport=3, home_Address=3, nationality=3), number=3, license_type=B, issue_date=2023-11-24 21:01:49.208716+00:00)>, <DriverLicense: DriverLicense(owner =CarOwner(first_name=4, last_name=4, birth_date=2023-11-24 20:58:29.717073+00:00, passport=4, home_Address=4, nationality=4), number=4, license_type=B, issue_date=2023-11-24 21:01:49.2243 37+00:00)>, <DriverLicense: DriverLicense(owner=CarOwner(first_name=5, last_name=5, birth_date=2023-11-24 20:58:29.725866+00:00, passport=5, home_Address=5, nationality=5), number=5, lice nse_type=B, issue_date=2023-11-24 21:01:49.224337+00:00)>, <DriverLicense: DriverLicense(owner=CarOwner(first_name=6, last_name=6, birth_date=2023-11-24 20:58:29.734116+00:00, passport=6, home_Address=6, nationality=6), number=6, license_type=B, issue_date=2023-11-24 21:01:52.179825+00:00)>]>","title":"\u0412\u044b\u0432\u043e\u0434"},{"location":"practice_3.1/#_9","text":"","title":"\u0410\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438"},{"location":"practice_3.1/#_10","text":"car1 = Car.objects.create(license_plate=\"1\", brand=\"Toyota\", model=\"Camry\", color=\"black\") car2 = Car.objects.create(license_plate=\"2\", brand=\"Toyota\", model=\"Corolla\", color=\"black\") car3 = Car.objects.create(license_plate=\"3\", brand=\"Lada\", model=\"Vesta\", color=\"black\") car4 = Car.objects.create(license_plate=\"4\", brand=\"Mitsubishi\", model=\"Lancer\", color=\"black\") car5 = Car.objects.create(license_plate=\"5\", brand=\"Honda\", model=\"Civic\", color=\"black\")","title":"\u0421\u043a\u0440\u0438\u043f\u0442"},{"location":"practice_3.1/#_11","text":">>> Car.objects.all() <QuerySet [<Car: Car(license_plate=1, brand=Toyota, model=Camry, color=black)>, <Car: Car(license_plate=2, brand=Toyota, model=Corolla, color=black)>, <Car: Car(license_plate=3, brand=Lad a, model=Vesta, color=black)>, <Car: Car(license_plate=4, brand=Mitsubishi, model=Lancer, color=black)>, <Car: Car(license_plate=5, brand=Honda, model=Civic, color=black)>]>","title":"\u0412\u044b\u0432\u043e\u0434"},{"location":"practice_3.1/#_12","text":"","title":"\u0412\u043b\u0430\u0434\u0435\u043d\u0438\u0435"},{"location":"practice_3.1/#_13","text":"ownership1 = Ownership.objects.create(owner=owner1, car=car1, date_start=datetime.datetime.now()) ownership2 = Ownership.objects.create(owner=owner2, car=car2, date_start=datetime.datetime.now()) ownership3 = Ownership.objects.create(owner=owner3, car=car3, date_start=datetime.datetime.now()) ownership4 = Ownership.objects.create(owner=owner4, car=car4, date_start=datetime.datetime.now()) ownership5 = Ownership.objects.create(owner=owner5, car=car5, date_start=datetime.datetime.now()) ownership6 = Ownership.objects.create(owner=owner6, car=car5, date_start=datetime.datetime.now())","title":"\u0421\u043a\u0440\u0438\u043f\u0442"},{"location":"practice_3.1/#_14","text":">>> Ownership.objects.all() <QuerySet [<Ownership: Ownership(car=Car(license_plate=1, brand=Toyota, model=Camry, color=black), owner=CarOwner(first_name=1, last_name=1, birth_date=2023-11-24 20:56:30.905200+00:00, p assport=1, home_Address=1, nationality=1), date_start=2023-11-24 21:19:20.875803+00:00, date_end=None)>, <Ownership: Ownership(car=Car(license_plate=2, brand=Toyota, model=Corolla, color= black), owner=CarOwner(first_name=2, last_name=2, birth_date=2023-11-24 20:58:29.691257+00:00, passport=2, home_Address=2, nationality=2), date_start=2023-11-24 21:19:20.960060+00:00, dat e_end=None)>, <Ownership: Ownership(car=Car(license_plate=3, brand=Lada, model=Vesta, color=black), owner=CarOwner(first_name=3, last_name=3, birth_date=2023-11-24 20:58:29.701066+00:00, passport=3, home_Address=3, nationality=3), date_start=2023-11-24 21:19:20.960060+00:00, date_end=None)>, <Ownership: Ownership(car=Car(license_plate=4, brand=Mitsubishi, model=Lancer, co lor=black), owner=CarOwner(first_name=4, last_name=4, birth_date=2023-11-24 20:58:29.717073+00:00, passport=4, home_Address=4, nationality=4), date_start=2023-11-24 21:19:20.975719+00:00, date_end=None)>, <Ownership: Ownership(car=Car(license_plate=5, brand=Honda, model=Civic, color=black), owner=CarOwner(first_name=5, last_name=5, birth_date=2023-11-24 20:58:29.725866+00 :00, passport=5, home_Address=5, nationality=5), date_start=2023-11-24 21:19:20.975719+00:00, date_end=None)>, <Ownership: Ownership(car=Car(license_plate=5, brand=Honda, model=Civic, col or=black), owner=CarOwner(first_name=6, last_name=6, birth_date=2023-11-24 20:58:29.734116+00:00, passport=6, home_Address=6, nationality=6), date_start=2023-11-24 21:19:25.046156+00:00, date_end=None)>]>","title":"\u0412\u044b\u0432\u043e\u0434"},{"location":"practice_3.1/#2","text":"","title":"\u0417\u0430\u0434\u0430\u0447\u0430 2"},{"location":"practice_3.1/#toyota","text":"","title":"\u0412\u044b\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0441\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043c\u0430\u0440\u043a\u0438 \u201cToyota\u201d"},{"location":"practice_3.1/#_15","text":"Car.objects.filter(brand=\"Toyota\")","title":"\u0421\u043a\u0440\u0438\u043f\u0442"},{"location":"practice_3.1/#_16","text":"<QuerySet [<Car: Car(license_plate=1, brand=Toyota, model=Camry, color=black)>, <Car: Car(license_plate=2, brand=Toyota, model=Corolla, color=black)>]>","title":"\u0412\u044b\u0432\u043e\u0434"},{"location":"practice_3.1/#1_1","text":"","title":"\u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u201c1\u201d"},{"location":"practice_3.1/#_17","text":"CarOwner.objects.filter(first_name=\"1\")","title":"\u0421\u043a\u0440\u0438\u043f\u0442"},{"location":"practice_3.1/#_18","text":"<QuerySet [<CarOwner: CarOwner(first_name=1, last_name=1, birth_date=2023-11-24 20:56:30.905200+00:00, passport=1, home_Address=1, nationality=1)>]>","title":"\u0412\u044b\u0432\u043e\u0434"},{"location":"practice_3.1/#id-id","text":"","title":"\u0412\u0437\u044f\u0432 \u043b\u044e\u0431\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0435\u0433\u043e id, \u0438 \u043f\u043e \u044d\u0442\u043e\u043c\u0443 id \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0438"},{"location":"practice_3.1/#_19","text":"desired_owner_id = CarOwner.objects.get(first_name=\"1\").id DriverLicense.objects.get(owner__id=desired_owner_id)","title":"\u0421\u043a\u0440\u0438\u043f\u0442"},{"location":"practice_3.1/#_20","text":"<DriverLicense: DriverLicense(owner=CarOwner(first_name=1, last_name=1, birth_date=2023-11-24 20:56:30.905200+00:00, passport=1, home_Address=1, nationality=1), number=1, license_type=B, issue_date=2023-11-24 21:01:49.146607+00:00)>","title":"\u0412\u044b\u0432\u043e\u0434"},{"location":"practice_3.1/#_21","text":"","title":"\u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0447\u0435\u0440\u043d\u044b\u0445 \u043c\u0430\u0448\u0438\u043d"},{"location":"practice_3.1/#_22","text":"CarOwner.objects.filter(ownership__car__color=\"black\")","title":"\u0421\u043a\u0440\u0438\u043f\u0442"},{"location":"practice_3.1/#_23","text":"<QuerySet [<CarOwner: CarOwner(first_name=1, last_name=1, birth_date=2023-11-24 20:56:30.905200+00:00, passport=1, home_Address=1, nationality=1)>, <CarOwner: CarOwner(first_name=2, last_ name=2, birth_date=2023-11-24 20:58:29.691257+00:00, passport=2, home_Address=2, nationality=2)>, <CarOwner: CarOwner(first_name=3, last_name=3, birth_date=2023-11-24 20:58:29.701066+00:0 0, passport=3, home_Address=3, nationality=3)>, <CarOwner: CarOwner(first_name=4, last_name=4, birth_date=2023-11-24 20:58:29.717073+00:00, passport=4, home_Address=4, nationality=4)>, <C arOwner: CarOwner(first_name=5, last_name=5, birth_date=2023-11-24 20:58:29.725866+00:00, passport=5, home_Address=5, nationality=5)>, <CarOwner: CarOwner(first_name=6, last_name=6, birth _date=2023-11-24 20:58:29.734116+00:00, passport=6, home_Address=6, nationality=6)>]>","title":"\u0412\u044b\u0432\u043e\u0434"},{"location":"practice_3.1/#2023","text":"","title":"\u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0447\u0435\u0439 \u0433\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 2023"},{"location":"practice_3.1/#_24","text":"CarOwner.objects.filter(driverlicense__issue_date__year=2023)","title":"\u0421\u043a\u0440\u0438\u043f\u0442"},{"location":"practice_3.1/#_25","text":"<QuerySet [<CarOwner: CarOwner(first_name=1, last_name=1, birth_date=2023-11-24 20:56:30.905200+00:00, passport=1, home_Address=1, nationality=1)>, <CarOwner: CarOwner(first_name=2, last_ name=2, birth_date=2023-11-24 20:58:29.691257+00:00, passport=2, home_Address=2, nationality=2)>, <CarOwner: CarOwner(first_name=3, last_name=3, birth_date=2023-11-24 20:58:29.701066+00:0 0, passport=3, home_Address=3, nationality=3)>, <CarOwner: CarOwner(first_name=4, last_name=4, birth_date=2023-11-24 20:58:29.717073+00:00, passport=4, home_Address=4, nationality=4)>, <C arOwner: CarOwner(first_name=5, last_name=5, birth_date=2023-11-24 20:58:29.725866+00:00, passport=5, home_Address=5, nationality=5)>, <CarOwner: CarOwner(first_name=6, last_name=6, birth _date=2023-11-24 20:58:29.734116+00:00, passport=6, home_Address=6, nationality=6)>]>","title":"\u0412\u044b\u0432\u043e\u0434"},{"location":"practice_3.1/#3","text":"","title":"\u0417\u0430\u0434\u0430\u0447\u0430 3"},{"location":"practice_3.1/#_26","text":"","title":"\u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u0442\u044b \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u0448\u0435\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f"},{"location":"practice_3.1/#_27","text":"from django.db.models import Min DriverLicense.objects.aggregate(earliest_date=Min(\"issue_date\"))","title":"\u0421\u043a\u0440\u0438\u043f\u0442"},{"location":"practice_3.1/#_28","text":"{'earliest_date': datetime.datetime(2023, 11, 24, 21, 1, 49, 146607, tzinfo=datetime.timezone.utc)}","title":"\u0412\u044b\u0432\u043e\u0434"},{"location":"practice_3.1/#-","text":"","title":"\u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439, \u0438\u043c\u0435\u044e\u0449\u0443\u044e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0432\u0430\u0448\u0435\u0439 \u0431\u0430\u0437\u0435"},{"location":"practice_3.1/#_29","text":"from django.db.models import Max Ownership.objects.aggregate(latest_ownership=Max(\"date_end\"))","title":"\u0421\u043a\u0440\u0438\u043f\u0442"},{"location":"practice_3.1/#_30","text":"{'latest_ownership': None}","title":"\u0412\u044b\u0432\u043e\u0434"},{"location":"practice_3.1/#_31","text":"","title":"\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f"},{"location":"practice_3.1/#_32","text":"from django.db.models import Count annotated = CarOwner.objects.annotate(Count(\"owner\")) for owner in annotated: print(owner.first_name, owner.owner__count)","title":"\u0421\u043a\u0440\u0438\u043f\u0442"},{"location":"practice_3.1/#_33","text":"1 1 2 1 3 1 4 1 5 1 6 1","title":"\u0412\u044b\u0432\u043e\u0434"},{"location":"practice_3.1/#_34","text":"","title":"\u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438"},{"location":"practice_3.1/#_35","text":"from django.db.models import Count Car.objects.values(\"brand\").annotate(Count(\"id\"))","title":"\u0421\u043a\u0440\u0438\u043f\u0442"},{"location":"practice_3.1/#_36","text":"<QuerySet [{'brand': 'Honda', 'id__count': 1}, {'brand': 'Lada', 'id__count': 1}, {'brand': 'Mitsubishi', 'id__count': 1}, {'brand': 'Toyota', 'id__count': 2}]>","title":"\u0412\u044b\u0432\u043e\u0434"},{"location":"practice_3.1/#_37","text":"","title":"\u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f"},{"location":"practice_3.1/#_38","text":"CarOwner.objects.order_by(\"driverlicense__issue_date\")","title":"\u0421\u043a\u0440\u0438\u043f\u0442"},{"location":"practice_3.1/#_39","text":"<QuerySet [<CarOwner: CarOwner(first_name=1, last_name=1, birth_date=2023-11-24 20:56:30.905200+00:00, passport=1, home_Address=1, nationality=1)>, <CarOwner: CarOwner(first_name=2, last_ name=2, birth_date=2023-11-24 20:58:29.691257+00:00, passport=2, home_Address=2, nationality=2)>, <CarOwner: CarOwner(first_name=3, last_name=3, birth_date=2023-11-24 20:58:29.701066+00:0 0, passport=3, home_Address=3, nationality=3)>, <CarOwner: CarOwner(first_name=4, last_name=4, birth_date=2023-11-24 20:58:29.717073+00:00, passport=4, home_Address=4, nationality=4)>, <C arOwner: CarOwner(first_name=5, last_name=5, birth_date=2023-11-24 20:58:29.725866+00:00, passport=5, home_Address=5, nationality=5)>, <CarOwner: CarOwner(first_name=6, last_name=6, birth _date=2023-11-24 20:58:29.734116+00:00, passport=6, home_Address=6, nationality=6)>]>","title":"\u0412\u044b\u0432\u043e\u0434"},{"location":"practice_3.2/","text":"\u041f\u0440\u0430\u043a\u0442\u0438\u043a\u0430 3.2 \u0417\u0430\u0434\u0430\u043d\u0438\u0435 1 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0435\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0438 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u0441\u043a\u0438\u043b\u043e\u0432 \u0432\u043e\u0438\u043d\u043e\u0432 \u0421\u0435\u0440\u0438\u0430\u043b\u0430\u0439\u0437\u0435\u0440 class SkillSerializer(serializers.ModelSerializer): class Meta: model = Skill fields = \"__all__\" API view class WarriorSkillsAPIView(APIView): def get(self, request): skills = Skill.objects.all() serializer = SkillSerializer(skills, many=True) return Response({\"skills\": serializer.data}) def post(self, request): skill = request.data serializer = SkillSerializer(data=skill) if serializer.is_valid(raise_exception=True): serializer.save() return Response(serializer.data) \u041e\u0434\u0438\u043d view \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 get \u0438 post \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043d\u0430 \u043e\u0434\u0438\u043d \u0438 \u0442\u043e\u0442 \u0436\u0435 URL URLS urlpatterns = [ path(\"warriors/skills\", WarriorSkillsAPIView.as_view()), ] \u0417\u0430\u0434\u0430\u043d\u0438\u0435 2 - \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b \u0412\u044b\u0432\u043e\u0434 \u043f\u043e\u043b\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u0441\u0435\u0445 \u0432\u043e\u0439\u043d\u0430\u0445 \u0438 \u0438\u0445 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u0445 (\u0432 \u043e\u0434\u043d\u043e\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u0435). API view class WarriorProfessionListAPIView(ListAPIView): serializer_class = WarriorProfessionSerializer queryset = Warrior.objects.all() Serializer class WarriorProfessionSerializer(serializers.ModelSerializer): profession = ProfessionSerializer(many=True) race = serializers.CharField(source=\"get_race_display\", read_only=True) class Meta: model = Warrior exclude = ('skill', ) URL path(\"warriors/profession\", WarriorProfessionListAPIView.as_view()) \u0412\u044b\u0432\u043e\u0434 \u043f\u043e\u043b\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u0441\u0435\u0445 \u0432\u043e\u0439\u043d\u0430\u0445 \u0438 \u0438\u0445 \u0441\u043a\u0438\u043b\u0430\u0445 (\u0432 \u043e\u0434\u043d\u043e\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u0435). API view class WarriorSkillListApiView(ListAPIView): serializer_class = WarriorSkillSerializer queryset = Warrior.objects.all() Serializer class WarriorSkillSerializer(serializers.ModelSerializer): skill = SkillSerializer(many=True) race = serializers.CharField(source=\"get_race_display\", read_only=True) class Meta: model = Warrior exclude = ('profession', ) URL path(\"warriors/skill\", WarriorSkillListApiView.as_view()), \u0412\u044b\u0432\u043e\u0434 \u043f\u043e\u043b\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u043e\u0439\u043d\u0435 (\u043f\u043e id), \u0435\u0433\u043e \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u0445 \u0438 \u0441\u043a\u0438\u043b\u0430\u0445. API view class GetWarriorAPIView(RetrieveAPIView): serializer_class = FullWarriorSerializer queryset = Warrior.objects.all() Serializer class FullWarriorSerializer(serializers.ModelSerializer): skill = SkillSerializer(many=True) profession = ProfessionSerializer(many=True) race = serializers.CharField(source=\"get_race_display\", read_only=True) class Meta: model = Warrior fields = \"__all__\" URL path(\"warriors/<int:pk>\", GetWarriorAPIView.as_view()), \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0432\u043e\u0439\u043d\u0430 \u043f\u043e id. API view class DeleteWarriorAPIView(DestroyAPIView): serializer_class = FullWarriorSerializer queryset = Warrior.objects.all() URL path(\"warriors/<int:pk>/delete\", DeleteWarriorAPIView.as_view()), \u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u043e\u0439\u043d\u0435. API view class UpdateWarriorAPIView(UpdateAPIView): serializer_class = FullWarriorSerializer queryset = Warrior.objects.all() URL path(\"warriors/<int:pk>/update\", UpdateWarriorAPIView.as_view()),","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u043a\u0430 3.2"},{"location":"practice_3.2/#32","text":"","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u043a\u0430 3.2"},{"location":"practice_3.2/#1","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0435\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0438 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u0441\u043a\u0438\u043b\u043e\u0432 \u0432\u043e\u0438\u043d\u043e\u0432","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1"},{"location":"practice_3.2/#_1","text":"class SkillSerializer(serializers.ModelSerializer): class Meta: model = Skill fields = \"__all__\"","title":"\u0421\u0435\u0440\u0438\u0430\u043b\u0430\u0439\u0437\u0435\u0440"},{"location":"practice_3.2/#api-view","text":"class WarriorSkillsAPIView(APIView): def get(self, request): skills = Skill.objects.all() serializer = SkillSerializer(skills, many=True) return Response({\"skills\": serializer.data}) def post(self, request): skill = request.data serializer = SkillSerializer(data=skill) if serializer.is_valid(raise_exception=True): serializer.save() return Response(serializer.data) \u041e\u0434\u0438\u043d view \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 get \u0438 post \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043d\u0430 \u043e\u0434\u0438\u043d \u0438 \u0442\u043e\u0442 \u0436\u0435 URL","title":"API view"},{"location":"practice_3.2/#urls","text":"urlpatterns = [ path(\"warriors/skills\", WarriorSkillsAPIView.as_view()), ]","title":"URLS"},{"location":"practice_3.2/#2-","text":"","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2 - \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b"},{"location":"practice_3.2/#_2","text":"","title":"\u0412\u044b\u0432\u043e\u0434 \u043f\u043e\u043b\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u0441\u0435\u0445 \u0432\u043e\u0439\u043d\u0430\u0445 \u0438 \u0438\u0445 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u0445 (\u0432 \u043e\u0434\u043d\u043e\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u0435)."},{"location":"practice_3.2/#api-view_1","text":"class WarriorProfessionListAPIView(ListAPIView): serializer_class = WarriorProfessionSerializer queryset = Warrior.objects.all()","title":"API view"},{"location":"practice_3.2/#serializer","text":"class WarriorProfessionSerializer(serializers.ModelSerializer): profession = ProfessionSerializer(many=True) race = serializers.CharField(source=\"get_race_display\", read_only=True) class Meta: model = Warrior exclude = ('skill', )","title":"Serializer"},{"location":"practice_3.2/#url","text":"path(\"warriors/profession\", WarriorProfessionListAPIView.as_view())","title":"URL"},{"location":"practice_3.2/#_3","text":"","title":"\u0412\u044b\u0432\u043e\u0434 \u043f\u043e\u043b\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u0441\u0435\u0445 \u0432\u043e\u0439\u043d\u0430\u0445 \u0438 \u0438\u0445 \u0441\u043a\u0438\u043b\u0430\u0445 (\u0432 \u043e\u0434\u043d\u043e\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u0435)."},{"location":"practice_3.2/#api-view_2","text":"class WarriorSkillListApiView(ListAPIView): serializer_class = WarriorSkillSerializer queryset = Warrior.objects.all()","title":"API view"},{"location":"practice_3.2/#serializer_1","text":"class WarriorSkillSerializer(serializers.ModelSerializer): skill = SkillSerializer(many=True) race = serializers.CharField(source=\"get_race_display\", read_only=True) class Meta: model = Warrior exclude = ('profession', )","title":"Serializer"},{"location":"practice_3.2/#url_1","text":"path(\"warriors/skill\", WarriorSkillListApiView.as_view()),","title":"URL"},{"location":"practice_3.2/#id","text":"","title":"\u0412\u044b\u0432\u043e\u0434 \u043f\u043e\u043b\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u043e\u0439\u043d\u0435 (\u043f\u043e id), \u0435\u0433\u043e \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u0445 \u0438 \u0441\u043a\u0438\u043b\u0430\u0445."},{"location":"practice_3.2/#api-view_3","text":"class GetWarriorAPIView(RetrieveAPIView): serializer_class = FullWarriorSerializer queryset = Warrior.objects.all()","title":"API view"},{"location":"practice_3.2/#serializer_2","text":"class FullWarriorSerializer(serializers.ModelSerializer): skill = SkillSerializer(many=True) profession = ProfessionSerializer(many=True) race = serializers.CharField(source=\"get_race_display\", read_only=True) class Meta: model = Warrior fields = \"__all__\"","title":"Serializer"},{"location":"practice_3.2/#url_2","text":"path(\"warriors/<int:pk>\", GetWarriorAPIView.as_view()),","title":"URL"},{"location":"practice_3.2/#id_1","text":"","title":"\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0432\u043e\u0439\u043d\u0430 \u043f\u043e id."},{"location":"practice_3.2/#api-view_4","text":"class DeleteWarriorAPIView(DestroyAPIView): serializer_class = FullWarriorSerializer queryset = Warrior.objects.all()","title":"API view"},{"location":"practice_3.2/#url_3","text":"path(\"warriors/<int:pk>/delete\", DeleteWarriorAPIView.as_view()),","title":"URL"},{"location":"practice_3.2/#_4","text":"","title":"\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u043e\u0439\u043d\u0435."},{"location":"practice_3.2/#api-view_5","text":"class UpdateWarriorAPIView(UpdateAPIView): serializer_class = FullWarriorSerializer queryset = Warrior.objects.all()","title":"API view"},{"location":"practice_3.2/#url_4","text":"path(\"warriors/<int:pk>/update\", UpdateWarriorAPIView.as_view()),","title":"URL"}]}